<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:tns="http://schemas.servicestack.net/types" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:svc="http://schemas.servicestack.net/types" name="Soap11" targetNamespace="http://schemas.servicestack.net/types" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xs:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="anyType" nillable="true" type="xs:anyType" />
      <xs:element name="anyURI" nillable="true" type="xs:anyURI" />
      <xs:element name="base64Binary" nillable="true" type="xs:base64Binary" />
      <xs:element name="boolean" nillable="true" type="xs:boolean" />
      <xs:element name="byte" nillable="true" type="xs:byte" />
      <xs:element name="dateTime" nillable="true" type="xs:dateTime" />
      <xs:element name="decimal" nillable="true" type="xs:decimal" />
      <xs:element name="double" nillable="true" type="xs:double" />
      <xs:element name="float" nillable="true" type="xs:float" />
      <xs:element name="int" nillable="true" type="xs:int" />
      <xs:element name="long" nillable="true" type="xs:long" />
      <xs:element name="QName" nillable="true" type="xs:QName" />
      <xs:element name="short" nillable="true" type="xs:short" />
      <xs:element name="string" nillable="true" type="xs:string" />
      <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte" />
      <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt" />
      <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong" />
      <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort" />
      <xs:element name="char" nillable="true" type="tns:char" />
      <xs:simpleType name="char">
        <xs:restriction base="xs:int" />
      </xs:simpleType>
      <xs:element name="duration" nillable="true" type="tns:duration" />
      <xs:simpleType name="duration">
        <xs:restriction base="xs:duration">
          <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?" />
          <xs:minInclusive value="-P10675199DT2H48M5.4775808S" />
          <xs:maxInclusive value="P10675199DT2H48M5.4775807S" />
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="guid" nillable="true" type="tns:guid" />
      <xs:simpleType name="guid">
        <xs:restriction base="xs:string">
          <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}" />
        </xs:restriction>
      </xs:simpleType>
      <xs:attribute name="FactoryType" type="xs:QName" />
      <xs:attribute name="Id" type="xs:ID" />
      <xs:attribute name="Ref" type="xs:IDREF" />
    </xs:schema>
    <xs:schema xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:tns="http://schemas.servicestack.net/types" elementFormDefault="qualified" targetNamespace="http://schemas.servicestack.net/types" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/" />
      <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
      <xs:complexType name="StoreLogs">
        <xs:sequence>
          <xs:element minOccurs="0" name="Loggers" nillable="true" type="svc:ArrayOfLogger" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="StoreLogs" nillable="true" type="svc:StoreLogs" />
      <xs:complexType name="ArrayOfLogger">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Logger" nillable="true" type="svc:Logger" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfLogger" nillable="true" type="svc:ArrayOfLogger" />
      <xs:complexType name="Logger">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="Logger" nillable="true" type="svc:Logger" />
      <xs:complexType name="StoreLogsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="ExistingLogs" nillable="true" type="svc:ArrayOfLogger" />
          <xs:element minOccurs="0" name="ResponseStatus" nillable="true" type="svc:ResponseStatus" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="StoreLogsResponse" nillable="true" type="svc:StoreLogsResponse" />
      <xs:complexType name="ResponseStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="ErrorCode" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="StackTrace" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Errors" nillable="true" type="svc:ArrayOfResponseError" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ResponseStatus" nillable="true" type="svc:ResponseStatus" />
      <xs:complexType name="ArrayOfResponseError">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ResponseError" nillable="true" type="svc:ResponseError" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfResponseError" nillable="true" type="svc:ArrayOfResponseError" />
      <xs:complexType name="ResponseError">
        <xs:sequence>
          <xs:element minOccurs="0" name="ErrorCode" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo>
                <DefaultValue EmitDefaultValue="false" xmlns="http://schemas.microsoft.com/2003/10/Serialization/" />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FieldName" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo>
                <DefaultValue EmitDefaultValue="false" xmlns="http://schemas.microsoft.com/2003/10/Serialization/" />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:appinfo>
                <DefaultValue EmitDefaultValue="false" xmlns="http://schemas.microsoft.com/2003/10/Serialization/" />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ResponseError" nillable="true" type="svc:ResponseError" />
      <xs:complexType name="DeleteAllUsers">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="DeleteAllUsers" nillable="true" type="svc:DeleteAllUsers" />
      <xs:complexType name="DeleteAllUsersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="ResponseStatus" nillable="true" type="svc:ResponseStatus" />
          <xs:element minOccurs="0" name="UserId" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DeleteAllUsersResponse" nillable="true" type="svc:DeleteAllUsersResponse" />
      <xs:complexType name="GetAllUsers">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="GetAllUsers" nillable="true" type="svc:GetAllUsers" />
      <xs:complexType name="GetAllUsersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="ResponseStatus" nillable="true" type="svc:ResponseStatus" />
          <xs:element minOccurs="0" name="Users" nillable="true" type="svc:ArrayOfUser" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetAllUsersResponse" nillable="true" type="svc:GetAllUsersResponse" />
      <xs:complexType name="ArrayOfUser">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="User" nillable="true" type="svc:User" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfUser" nillable="true" type="svc:ArrayOfUser" />
      <xs:complexType name="User">
        <xs:sequence>
          <xs:element minOccurs="0" name="Email" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="GlobalId" type="ser:guid" />
          <xs:element minOccurs="0" name="Id" type="xs:int" />
          <xs:element minOccurs="0" name="Password" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="UserName" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="User" nillable="true" type="svc:User" />
      <xs:complexType name="GetFactorial">
        <xs:sequence>
          <xs:element minOccurs="0" name="ForNumber" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetFactorial" nillable="true" type="svc:GetFactorial" />
      <xs:complexType name="GetFactorialResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="Result" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetFactorialResponse" nillable="true" type="svc:GetFactorialResponse" />
      <xs:complexType name="GetFibonacciNumbers">
        <xs:sequence>
          <xs:element minOccurs="0" name="Skip" nillable="true" type="xs:long" />
          <xs:element minOccurs="0" name="Take" nillable="true" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetFibonacciNumbers" nillable="true" type="svc:GetFibonacciNumbers" />
      <xs:complexType name="GetFibonacciNumbersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="Results" nillable="true" type="svc:ArrayOfLong" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetFibonacciNumbersResponse" nillable="true" type="svc:GetFibonacciNumbersResponse" />
      <xs:complexType name="ArrayOfLong">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Long" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfLong" nillable="true" type="svc:ArrayOfLong" />
      <xs:complexType name="GetNorthwindCustomerOrders">
        <xs:sequence>
          <xs:element minOccurs="0" name="CustomerId" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetNorthwindCustomerOrders" nillable="true" type="svc:GetNorthwindCustomerOrders" />
      <xs:complexType name="GetNorthwindCustomerOrdersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="CustomerOrders" nillable="true" type="svc:CustomerOrders" />
          <xs:element minOccurs="0" name="ResponseStatus" nillable="true" type="svc:ResponseStatus" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetNorthwindCustomerOrdersResponse" nillable="true" type="svc:GetNorthwindCustomerOrdersResponse" />
      <xs:complexType name="CustomerOrders">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="CustomerOrders" nillable="true" type="svc:CustomerOrders" />
      <xs:complexType name="GetNorthwindCustomerOrdersCached">
        <xs:sequence>
          <xs:element minOccurs="0" name="CustomerId" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="RefreshCache" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetNorthwindCustomerOrdersCached" nillable="true" type="svc:GetNorthwindCustomerOrdersCached" />
      <xs:complexType name="GetNorthwindCustomerOrdersCachedResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="CreatedDate" type="xs:dateTime" />
          <xs:element minOccurs="0" name="CustomerOrders" nillable="true" type="svc:CustomerOrders" />
          <xs:element minOccurs="0" name="ResponseStatus" nillable="true" type="svc:ResponseStatus" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetNorthwindCustomerOrdersCachedResponse" nillable="true" type="svc:GetNorthwindCustomerOrdersCachedResponse" />
      <xs:complexType name="GetUsers">
        <xs:sequence>
          <xs:element xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="UserIds" nillable="true" type="q1:ArrayOflong" />
          <xs:element xmlns:q2="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="UserNames" nillable="true" type="q2:ArrayOfstring" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetUsers" nillable="true" type="svc:GetUsers" />
      <xs:complexType name="GetUsersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="ResponseStatus" nillable="true" type="svc:ResponseStatus" />
          <xs:element minOccurs="0" name="Users" nillable="true" type="svc:ArrayOfUser" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetUsersResponse" nillable="true" type="svc:GetUsersResponse" />
      <xs:complexType name="Greet">
        <xs:sequence>
          <xs:element minOccurs="0" name="Name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Greet" nillable="true" type="svc:Greet" />
      <xs:complexType name="GreetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="Result" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GreetResponse" nillable="true" type="svc:GreetResponse" />
      <xs:complexType name="Device">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="Device" nillable="true" type="svc:Device" />
      <xs:complexType name="Channel">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="Channel" nillable="true" type="svc:Channel" />
      <xs:complexType name="Movie">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="Movie" nillable="true" type="svc:Movie" />
      <xs:complexType name="Movies">
        <xs:sequence>
          <xs:element minOccurs="0" name="Id" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Movie" nillable="true" type="svc:Movie" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Movies" nillable="true" type="svc:Movies" />
      <xs:complexType name="MoviesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="Movies" nillable="true" type="svc:ArrayOfMovie" />
          <xs:element minOccurs="0" name="ResponseStatus" nillable="true" type="svc:ResponseStatus" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="MoviesResponse" nillable="true" type="svc:MoviesResponse" />
      <xs:complexType name="ArrayOfMovie">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Movie" nillable="true" type="svc:Movie" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfMovie" nillable="true" type="svc:ArrayOfMovie" />
      <xs:complexType name="Customer">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="Customer" nillable="true" type="svc:Customer" />
      <xs:complexType name="Order">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="Order" nillable="true" type="svc:Order" />
      <xs:complexType name="OrderHeader">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="OrderHeader" nillable="true" type="svc:OrderHeader" />
      <xs:complexType name="OrderDetail">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="OrderDetail" nillable="true" type="svc:OrderDetail" />
      <xs:complexType name="ResetMovieDatabase">
        <xs:sequence />
      </xs:complexType>
      <xs:element name="ResetMovieDatabase" nillable="true" type="svc:ResetMovieDatabase" />
      <xs:complexType name="ResetMovieDatabaseResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="ResponseStatus" nillable="true" type="svc:ResponseStatus" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ResetMovieDatabaseResponse" nillable="true" type="svc:ResetMovieDatabaseResponse" />
      <xs:complexType name="StoreNewUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="Email" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Password" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="UserName" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="StoreNewUser" nillable="true" type="svc:StoreNewUser" />
      <xs:complexType name="StoreNewUserResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="ResponseStatus" nillable="true" type="svc:ResponseStatus" />
          <xs:element minOccurs="0" name="UserId" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="StoreNewUserResponse" nillable="true" type="svc:StoreNewUserResponse" />
    </xs:schema>
    <xs:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/Arrays" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="ArrayOflong">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="long" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOflong" nillable="true" type="tns:ArrayOflong" />
      <xs:complexType name="ArrayOfstring">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfstring" nillable="true" type="tns:ArrayOfstring" />
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="StoreLogsIn">
    <wsdl:part name="par" element="svc:StoreLogs" />
  </wsdl:message>
  <wsdl:message name="StoreLogsOut">
    <wsdl:part name="par" element="svc:StoreLogsResponse" />
  </wsdl:message>
  <wsdl:message name="ResetMovieDatabaseIn">
    <wsdl:part name="par" element="svc:ResetMovieDatabase" />
  </wsdl:message>
  <wsdl:message name="ResetMovieDatabaseOut">
    <wsdl:part name="par" element="svc:ResetMovieDatabaseResponse" />
  </wsdl:message>
  <wsdl:message name="MoviesIn">
    <wsdl:part name="par" element="svc:Movies" />
  </wsdl:message>
  <wsdl:message name="MoviesOut">
    <wsdl:part name="par" element="svc:MoviesResponse" />
  </wsdl:message>
  <wsdl:message name="GetFactorialIn">
    <wsdl:part name="par" element="svc:GetFactorial" />
  </wsdl:message>
  <wsdl:message name="GetFactorialOut">
    <wsdl:part name="par" element="svc:GetFactorialResponse" />
  </wsdl:message>
  <wsdl:message name="GetAllUsersIn">
    <wsdl:part name="par" element="svc:GetAllUsers" />
  </wsdl:message>
  <wsdl:message name="GetAllUsersOut">
    <wsdl:part name="par" element="svc:GetAllUsersResponse" />
  </wsdl:message>
  <wsdl:message name="GetNorthwindCustomerOrdersIn">
    <wsdl:part name="par" element="svc:GetNorthwindCustomerOrders" />
  </wsdl:message>
  <wsdl:message name="GetNorthwindCustomerOrdersOut">
    <wsdl:part name="par" element="svc:GetNorthwindCustomerOrdersResponse" />
  </wsdl:message>
  <wsdl:message name="StoreNewUserIn">
    <wsdl:part name="par" element="svc:StoreNewUser" />
  </wsdl:message>
  <wsdl:message name="StoreNewUserOut">
    <wsdl:part name="par" element="svc:StoreNewUserResponse" />
  </wsdl:message>
  <wsdl:message name="DeleteAllUsersIn">
    <wsdl:part name="par" element="svc:DeleteAllUsers" />
  </wsdl:message>
  <wsdl:message name="DeleteAllUsersOut">
    <wsdl:part name="par" element="svc:DeleteAllUsersResponse" />
  </wsdl:message>
  <wsdl:message name="GreetIn">
    <wsdl:part name="par" element="svc:Greet" />
  </wsdl:message>
  <wsdl:message name="GreetOut">
    <wsdl:part name="par" element="svc:GreetResponse" />
  </wsdl:message>
  <wsdl:message name="GetUsersIn">
    <wsdl:part name="par" element="svc:GetUsers" />
  </wsdl:message>
  <wsdl:message name="GetUsersOut">
    <wsdl:part name="par" element="svc:GetUsersResponse" />
  </wsdl:message>
  <wsdl:message name="GetFibonacciNumbersIn">
    <wsdl:part name="par" element="svc:GetFibonacciNumbers" />
  </wsdl:message>
  <wsdl:message name="GetFibonacciNumbersOut">
    <wsdl:part name="par" element="svc:GetFibonacciNumbersResponse" />
  </wsdl:message>
  <wsdl:portType name="ISyncReply">
    <wsdl:operation name="StoreLogs">
      <wsdl:input message="svc:StoreLogsIn" />
      <wsdl:output message="svc:StoreLogsOut" />
    </wsdl:operation>
    <wsdl:operation name="ResetMovieDatabase">
      <wsdl:input message="svc:ResetMovieDatabaseIn" />
      <wsdl:output message="svc:ResetMovieDatabaseOut" />
    </wsdl:operation>
    <wsdl:operation name="Movies">
      <wsdl:input message="svc:MoviesIn" />
      <wsdl:output message="svc:MoviesOut" />
    </wsdl:operation>
    <wsdl:operation name="GetFactorial">
      <wsdl:input message="svc:GetFactorialIn" />
      <wsdl:output message="svc:GetFactorialOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAllUsers">
      <wsdl:input message="svc:GetAllUsersIn" />
      <wsdl:output message="svc:GetAllUsersOut" />
    </wsdl:operation>
    <wsdl:operation name="GetNorthwindCustomerOrders">
      <wsdl:input message="svc:GetNorthwindCustomerOrdersIn" />
      <wsdl:output message="svc:GetNorthwindCustomerOrdersOut" />
    </wsdl:operation>
    <wsdl:operation name="StoreNewUser">
      <wsdl:input message="svc:StoreNewUserIn" />
      <wsdl:output message="svc:StoreNewUserOut" />
    </wsdl:operation>
    <wsdl:operation name="DeleteAllUsers">
      <wsdl:input message="svc:DeleteAllUsersIn" />
      <wsdl:output message="svc:DeleteAllUsersOut" />
    </wsdl:operation>
    <wsdl:operation name="Greet">
      <wsdl:input message="svc:GreetIn" />
      <wsdl:output message="svc:GreetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUsers">
      <wsdl:input message="svc:GetUsersIn" />
      <wsdl:output message="svc:GetUsersOut" />
    </wsdl:operation>
    <wsdl:operation name="GetFibonacciNumbers">
      <wsdl:input message="svc:GetFibonacciNumbersIn" />
      <wsdl:output message="svc:GetFibonacciNumbersOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_ISyncReply" type="svc:ISyncReply">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="StoreLogs">
      <soap:operation soapAction="http://schemas.servicestack.net/types/StoreLogs" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ResetMovieDatabase">
      <soap:operation soapAction="http://schemas.servicestack.net/types/ResetMovieDatabase" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Movies">
      <soap:operation soapAction="http://schemas.servicestack.net/types/Movies" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFactorial">
      <soap:operation soapAction="http://schemas.servicestack.net/types/GetFactorial" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllUsers">
      <soap:operation soapAction="http://schemas.servicestack.net/types/GetAllUsers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNorthwindCustomerOrders">
      <soap:operation soapAction="http://schemas.servicestack.net/types/GetNorthwindCustomerOrders" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoreNewUser">
      <soap:operation soapAction="http://schemas.servicestack.net/types/StoreNewUser" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteAllUsers">
      <soap:operation soapAction="http://schemas.servicestack.net/types/DeleteAllUsers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Greet">
      <soap:operation soapAction="http://schemas.servicestack.net/types/Greet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUsers">
      <soap:operation soapAction="http://schemas.servicestack.net/types/GetUsers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFibonacciNumbers">
      <soap:operation soapAction="http://schemas.servicestack.net/types/GetFibonacciNumbers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SyncReply">
    <wsdl:port name="BasicHttpBinding_ISyncReply" binding="svc:BasicHttpBinding_ISyncReply">
      <soap:address location="http://localhost:64067/ServiceStack/soap11" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>